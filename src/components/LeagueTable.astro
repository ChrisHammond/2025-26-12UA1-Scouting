---
import { getCollection } from "astro:content";

/** Props */
const {
  league = "MO Hockey",
  division = "12U A1",
  hideSelf = false,
  selfSlug = "chesterfield-a1",
  combineRanks = false, // may be set true on homepage
  leagueUrl = "https://www.mohockeyyd.org/division/19054?subseason_id=4479",            // NEW: Optional URL to the league home page
} = Astro.props;

const norm = (s?: string) => (s ?? "").replace(/[^a-z0-9]/gi, "").toLowerCase();

const leagueKey = norm(league);
const divisionKey = norm(division);

const rows = (await getCollection("teams"))
  .map((t) => t.data)
  .filter((t) => norm(t.league) === leagueKey && norm(t.division) === divisionKey)
  .filter((t) => (hideSelf ? t.slug !== selfSlug : true))
  .sort((a, b) => {
    // Sort by rating desc, then national rank asc, then name
    const ra = typeof a.rating === "number" ? a.rating : -1;
    const rb = typeof b.rating === "number" ? b.rating : -1;
    if (rb !== ra) return rb - ra;
    const na = typeof a.mhrNationalRank === "number" ? a.mhrNationalRank : 999999;
    const nb = typeof b.mhrNationalRank === "number" ? b.mhrNationalRank : 999999;
    if (na !== nb) return na - nb;
    return a.name.localeCompare(b.name);
  });

// NEW: only show rank column(s) if someone has a rank
const hasAnyRank = rows.some(
  (t) => typeof t.mhrStateRank === "number" || typeof t.mhrNationalRank === "number"
);

function fmtStNat(t: any) {
  const st = typeof t.mhrStateRank === "number" ? String(t.mhrStateRank) : "—";
  const nat = typeof t.mhrNationalRank === "number" ? String(t.mhrNationalRank) : "—";
  return `${st}/${nat}`;
}
---

<div class="mt-8">
  <h2 class="text-2xl font-semibold text-red-500 mb-3">
    {
      leagueUrl ? (
        <a
          href={leagueUrl}
          class="underline decoration-red-500/40 hover:text-red-400 hover:decoration-red-400"
          target="_blank"
          rel="noopener"
          aria-label={`Open ${league} home page`}
        >
          {league}
        </a>
      ) : (
        league
      )
    } — {division} Standings
  </h2>

  {rows.length === 0 ? (
    <p class="text-gray-300">
      No teams matched. Ensure team JSON has <code>league: "{league}"</code> and
      <code>division: "{division}"</code>.
    </p>
  ) : (
    <div class="overflow-x-auto rounded-lg border border-red-600">
      <table class="min-w-full text-sm">
        <thead class="bg-red-600 text-white uppercase text-xs">
          <tr>
            <th class="px-3 py-2 text-left">#</th>
            <th class="px-3 py-2 text-left">Team</th>
            <th class="px-3 py-2 text-left">Record</th>
            <th class="px-3 py-2 text-left">MHR Rating</th>
            {combineRanks ? (
              hasAnyRank && <th class="px-3 py-2 text-left">ST/NAT Rank</th>
            ) : (
              hasAnyRank && (
                <>
                  <th class="px-3 py-2 text-left">State Rank</th>
                  <th class="px-3 py-2 text-left">National Rank</th>
                </>
              )
            )}
            <th class="px-3 py-2 text-left">Links</th>
            <th class="px-3 py-2 text-left">Updated</th>
          </tr>
        </thead>
        <tbody class="bg-gray-900 divide-y divide-gray-700">
          {rows.map((t, i) => (
            <tr class="hover:bg-gray-800">
              <td class="px-3 py-2">{i + 1}</td>
              <td class="px-3 py-2">
                <a href={`/teams/${t.slug}/`} class="underline hover:text-red-400">{t.name}</a>
              </td>
              <td class="px-3 py-2">{t.record ?? "—"}</td>
              <td class="px-3 py-2">{typeof t.rating === "number" ? t.rating.toFixed(2) : "—"}</td>

              {combineRanks ? (
                hasAnyRank && <td class="px-3 py-2">{fmtStNat(t)}</td>
              ) : (
                hasAnyRank && (
                  <>
                    <td class="px-3 py-2">{typeof t.mhrStateRank === "number" ? `#${t.mhrStateRank}` : "—"}</td>
                    <td class="px-3 py-2">{typeof t.mhrNationalRank === "number" ? `#${t.mhrNationalRank}` : "—"}</td>
                  </>
                )
              )}

              <td class="px-3 py-2 space-x-3">
                {t.website && (
                  <a
                    href={t.website}
                    target="_blank"
                    rel="noopener"
                    class="underline hover:text-red-400"
                  >
                    Site
                  </a>
                )}
                {t.mhrUrl && (
                  <a
                    href={t.mhrUrl}
                    target="_blank"
                    rel="noopener"
                    class="underline hover:text-red-400"
                  >
                    MHR
                  </a>
                )}
              </td>
              <td class="px-3 py-2">{t.lastUpdated ?? "—"}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  )}
</div>
